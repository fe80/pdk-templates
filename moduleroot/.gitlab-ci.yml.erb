---
<% if @configs['override'] && @configs.has_key?('custom') -%>
<%   configs = @configs['custom'].dup -%>
<% elsif @configs['defaults'] && !@configs.has_key?('custom') -%>
<%   configs = @configs['defaults'].dup -%>
<% else -%>
<%   require 'deep_merge/core' -%>
<%   configs = {} -%>
<%   configs.deep_merge!(@configs['defaults']) -%>
<%   configs.deep_merge!(@configs['custom']) -%>
<% end -%>
stages:
<% unless @configs['override'] -%>
  - syntax
  - unit
<% end -%>
<% if configs['use_litmus'] -%>
  - acceptance
<% end -%>
<% if configs['beaker'] -%>
  - beaker
<% end -%>
<% if configs['custom_stages'] -%>
<%   configs['custom_stages'].each do |stage| -%>
  - <%= stage %>
<%   end -%>
<% end -%>
<% if configs.has_key?('global_variables') -%>
variables:
<%   configs['global_variables'].each do |key, value| -%>
  <%= key %>: '<%= value %>'
<%   end -%>
<% end -%>

<% if configs['image'] || configs['cache'] || !configs.has_key?('default_before_script') || configs['default_before_script'] -%>
default:
<% end -%>
<% if configs['image'] -%>
  image: <%= configs['image'] %>

<% end -%>
<% if configs['cache'] -%>
  cache:
    paths:
<%   configs['cache']['paths'].each do |path| -%>
      - <%= path %>
<%   end -%>
<% end -%>
<% if configs['tags'] -%>
  tags:
<%   configs['tags'].each do |tag| -%>
    - <%= tag %>
<%   end -%>
<% end -%>

<% if !configs.has_key?('default_before_script') || configs['default_before_script'] -%>
  before_script: &before_script
<% if configs['custom_before_steps'] -%>
<%   if configs['custom_before_steps'].is_a? Array -%>
<%     configs['custom_before_steps'] = { 'before' => configs['custom_before_steps'] } -%>
<%   end -%>
<%   if configs['custom_before_steps']['before'] -%>
<%     configs['custom_before_steps']['before'].each do |step| -%>
    - <%= step %>
<%     end -%>
<%   end -%>
<% end -%>
    - bundle -v
    - rm Gemfile.lock || true
<% if configs['rubygems_mirror'] -%>
    - gem sources -a <%= configs['rubygems_mirror'] %> --remove https://rubygems.org/
    - bundle config mirror.http://rubygems.org/ <%= configs['rubygems_mirror'] %>
    - bundle config mirror.https://rubygems.org/ <%= configs['rubygems_mirror'] %>
<% end -%>
    - "# Update system gems if requested. This is useful to temporarily workaround troubles in the test runner"
    - "# Set `rubygems_version` in the .sync.yml to set a value"
    - "# Ignore exit code of SIGPIPE'd yes to not fail with shell's pipefail set"
    - '[ -z "$RUBYGEMS_VERSION" ] || (yes || true) | gem update --system $RUBYGEMS_VERSION'
    - gem --version
    - bundle -v
    - bundle install <%= configs['bundler_args'] %>
<% if configs['custom_before_steps'] and configs['custom_before_steps']['after'] -%>
<%     configs['custom_before_steps']['after'].each do |step| -%>
    - <%= step %>
<%     end -%>
<%   end -%>
<% end -%>

<% if configs['ruby_versions'] -%>
<%   configs['ruby_versions'].each do |ruby_version, options| -%>
<%     if options['image'] -%>
<%       image = options['image'] -%>
<%     else -%>
<%       image = 'ruby' -%>
<%     end -%>
<%     options['checks'].each do |check| -%>
<%= check %>-Ruby <%= ruby_version %>-Puppet <%= options['puppet_version'] %>:
<%       if check =~ /spec/ -%>
  stage: unit
<%        if configs['coverage'] -%>
  coverage: '<%= configs['coverage'] %>'
<%        end -%>
<%       else -%>
  stage: syntax
<%       end -%>
<%       if %r{:}.match?(image) -%>
  image: <%= image %>
<%       else -%>
  image: <%= image %>:<%= ruby_version %>
<%       end -%>
  script:
    - bundle exec rake <%= check %>
  variables:
    PUPPET_GEM_VERSION: '<%= options['puppet_version'] %>'
<%       if options['rubygems_version'] -%>
    RUBYGEMS_VERSION: '<%= options['rubygems_version'] -%>'
<%       end -%>
<% if configs.has_key?('global_variables') -%>
<%   configs['global_variables'].each do |key, value| -%>
    <%= key %>: '<%= value %>'
<%   end -%>
<% end -%>
<%       if options['allow_failure'] -%>
<%         if options['allow_failure'].include?(check) -%>
  allow_failure: true
<%         end -%>
<%       end -%>
<%       unless options['except'].nil? || options['except'][check].nil? -%>
  except:
<%         if ['variables', 'refs', 'changes', 'kubernetes'].any? { |i| options['except'][check].include?(i) } -%>
<%           options['except'][check].each do |key, ref| -%>
      <%= key %>:
<%             ref.each do |r| -%>
      - <%= r %>
<%             end -%>
<%           end -%>
<%         else -%>
<%           options['except'][check].each do |ref| -%>
    - <%= ref %>
<%           end -%>
<%         end -%>
<%       end -%>
<%       unless options['only'].nil? || options['only'][check].nil? -%>
  only:
<%         if ['variables', 'refs', 'changes', 'kubernetes'].any? { |i| options['only'][check].include?(i) } -%>
<%           options['only'][check].each do |key, ref| -%>
      <%= key %>:
<%             ref.each do |r| -%>
      - <%= r %>
<%             end -%>
<%           end -%>
<%         else -%>
<%           options['only'][check].each do |ref| -%>
    - <%= ref %>
<%           end -%>
<%         end -%>
<%       end -%>
<%       if options['tags'] -%>
  tags:
<%         options['tags'].each do |tag| -%>
    - <%= tag %>
<%         end -%>
<%       end %>
<%     end -%>
<%   end -%>
<% end -%>
<% if configs['use_litmus']
  cfgs = if configs['litmus']['complex']
              (configs['litmus']['complex'] + [{'collection' =>configs['litmus'] }])
            else
              [{'collection' =>configs['litmus'] }]
            end
  cfgs.each do |cfg|
  cfg['collection']['puppet_collection'].each do |puppet_version|
  cfg['collection']['provision_list'].each do |platform|-%>
litmus-<%= platform -%>-<%= puppet_version -%>:
  stage: acceptance
  variables:
    DOCKER_DRIVER: overlay2
<%   if configs['litmus']['variables'] -%>
<%     configs['litmus']['variables'].each do |key, value| -%>
    <%= key %>: <%= value %>
<%     end -%>
<%   end -%>
  services:
    - docker:dind
  before_script:
    - *before_script
    - "bundle exec rake 'litmus:provision_list[<%=platform%>]'"
<%  if configs['litmus']['install_wget']-%>
    - "bundle exec bolt command run 'apt-get install wget -y' --inventoryfile inventory.yaml --nodes='localhost*'"
<%  end-%>
    - "bundle exec rake 'litmus:install_agent[<%=puppet_version%>]'"
    - "bundle exec rake litmus:install_module"
  script:
    - "bundle exec rake litmus:acceptance:parallel"
<%   if configs['litmus']['tags'] -%>
  tags:
<%     configs['litmus']['tags'].each do |tag| -%>
    - <%= tag %>
<%     end -%>
<%   end -%>
<%    end -%>
<%   end -%>
<%  end -%>
<% end -%>
<% if configs['beaker'] -%>
beaker:
  stage: beaker
  variables:
    DOCKER_DRIVER: 'overlay2'
<%   configs['beaker']['variables'].each do |key, value| -%>
    <%= key %>: '<%= value %>'
<%   end -%>
  services:
    - docker:dind
  script:
    - bundle install --with-system_tests
    - bundle exec rake acceptance
<%   if configs['beaker']['tags'] -%>
  tags:
<%     configs['beaker']['tags'].each do |tag| -%>
    - <%= tag %>
<%     end -%>
<%   end -%>
<% end -%>
<% if configs['custom_jobs'] -%>
<%=  YAML.dump(configs['custom_jobs']).sub(%r{\A---\r?\n}m, '') %>
<% end -%>
